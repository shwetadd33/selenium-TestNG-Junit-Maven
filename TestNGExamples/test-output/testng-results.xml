<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="15" passed="11" failed="2" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-19T15:52:53 GMT-06:00" name="Suite" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="95">
    <groups>
    </groups>
    <test started-at="2025-01-19T15:52:53 GMT-06:00" name="Test" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="95">
      <class name="testcases.ValidateUserRegTest">
        <test-method signature="validate()[pri:0, instance:testcases.ValidateUserRegTest@2898ac89]" started-at="2025-01-19T15:52:53 GMT-06:00" name="validate" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
expected [PQR] but found [ABC],
Custom Error Message did not expect to find [true] but found [false],
404 Error]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
expected [PQR] but found [ABC],
Custom Error Message did not expect to find [true] but found [false],
404 Error
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at testcases.ValidateUserRegTest.validate(ValidateUserRegTest.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate -->
      </class> <!-- testcases.ValidateUserRegTest -->
      <class name="testcases.SearchAndBuyPhone">
        <test-method signature="search()[pri:1, instance:testcases.SearchAndBuyPhone@683dbc2c]" started-at="2025-01-19T15:52:53 GMT-06:00" name="search" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="1" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.fail(Assert.java:102)
at testcases.SearchAndBuyPhone.search(SearchAndBuyPhone.java:12)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method signature="selectPhone()[pri:2, instance:testcases.SearchAndBuyPhone@683dbc2c]" started-at="2025-01-19T15:52:53 GMT-06:00" name="selectPhone" finished-at="2025-01-19T15:52:53 GMT-06:00" depends-on-methods="testcases.SearchAndBuyPhone.search" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SearchAndBuyPhone.selectPhone()[pri:2, instance:testcases.SearchAndBuyPhone@683dbc2c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SearchAndBuyPhone.selectPhone()[pri:2, instance:testcases.SearchAndBuyPhone@683dbc2c] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPhone -->
        <test-method signature="checkout()[pri:3, instance:testcases.SearchAndBuyPhone@683dbc2c]" started-at="2025-01-19T15:52:53 GMT-06:00" name="checkout" finished-at="2025-01-19T15:52:53 GMT-06:00" depends-on-methods="testcases.SearchAndBuyPhone.search, testcases.SearchAndBuyPhone.selectPhone" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method SearchAndBuyPhone.checkout()[pri:3, instance:testcases.SearchAndBuyPhone@683dbc2c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method SearchAndBuyPhone.checkout()[pri:3, instance:testcases.SearchAndBuyPhone@683dbc2c] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:99)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:41)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:443)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:67)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkout -->
      </class> <!-- testcases.SearchAndBuyPhone -->
      <class name="testcases.LoginTest">
        <test-method is-config="true" signature="beforeTest1()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="beforeTest1" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest1 -->
        <test-method is-config="true" signature="init()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="init" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="checkUser()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="checkUser" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkUser -->
        <test-method is-config="true" signature="end()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="end" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="init()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="init" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="doLogin()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="doLogin" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- doLogin -->
        <test-method is-config="true" signature="end()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="end" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
        <test-method is-config="true" signature="AfterTest1()[pri:0, instance:testcases.LoginTest@6e509ffa]" started-at="2025-01-19T15:52:53 GMT-06:00" name="AfterTest1" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterTest1 -->
      </class> <!-- testcases.LoginTest -->
      <class name="testcases.PassingValuesTest">
        <test-method signature="search(org.testng.ITestContext)[pri:1, instance:testcases.PassingValuesTest@68267da0]" started-at="2025-01-19T15:52:53 GMT-06:00" name="search" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@9ed6e9e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- search -->
        <test-method signature="selectPhone(org.testng.ITestContext)[pri:2, instance:testcases.PassingValuesTest@68267da0]" started-at="2025-01-19T15:52:53 GMT-06:00" name="selectPhone" finished-at="2025-01-19T15:52:53 GMT-06:00" depends-on-methods="testcases.PassingValuesTest.search" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@9ed6e9e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectPhone -->
        <test-method signature="checkout(org.testng.ITestContext)[pri:3, instance:testcases.PassingValuesTest@68267da0]" started-at="2025-01-19T15:52:53 GMT-06:00" name="checkout" finished-at="2025-01-19T15:52:53 GMT-06:00" depends-on-methods="testcases.PassingValuesTest.search, testcases.PassingValuesTest.selectPhone" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@9ed6e9e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkout -->
      </class> <!-- testcases.PassingValuesTest -->
      <class name="testcases.ParameterizesTestcases">
        <test-method signature="create(java.lang.String, java.lang.String, int)[pri:0, instance:testcases.ParameterizesTestcases@2638011]" started-at="2025-01-19T15:52:53 GMT-06:00" name="create" data-provider="getData" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method signature="create(java.lang.String, java.lang.String, int)[pri:0, instance:testcases.ParameterizesTestcases@2638011]" started-at="2025-01-19T15:52:53 GMT-06:00" name="create" data-provider="getData" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PQR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method signature="create(java.lang.String, java.lang.String, int)[pri:0, instance:testcases.ParameterizesTestcases@2638011]" started-at="2025-01-19T15:52:53 GMT-06:00" name="create" data-provider="getData" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XYZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create -->
        <test-method signature="delete(java.lang.String, java.lang.String, int)[pri:0, instance:testcases.ParameterizesTestcases@2638011]" started-at="2025-01-19T15:52:53 GMT-06:00" name="delete" data-provider="getData" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ABC]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method signature="delete(java.lang.String, java.lang.String, int)[pri:0, instance:testcases.ParameterizesTestcases@2638011]" started-at="2025-01-19T15:52:53 GMT-06:00" name="delete" data-provider="getData" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[PQR]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
        <test-method signature="delete(java.lang.String, java.lang.String, int)[pri:0, instance:testcases.ParameterizesTestcases@2638011]" started-at="2025-01-19T15:52:53 GMT-06:00" name="delete" data-provider="getData" finished-at="2025-01-19T15:52:53 GMT-06:00" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[XYZ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Pass3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delete -->
      </class> <!-- testcases.ParameterizesTestcases -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
